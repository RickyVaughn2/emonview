# SPECIMEN emonHub configuration file
# Note that when installed from apt, a new config file is written 
# by the debian/postinst script, so changing this file will do 
# nothing in and of itself.

# Each Interfacer and each Reporter has
# - a [[name]]: a unique string
# - a type: the name of the class it instantiates
# - a set of init_settings (depends on the type)
# - a set of runtimesettings (depends on the type)
# Both init_settings and runtimesettings sections must be defined,
# even if empty. Init settings are used at initialization,
# and runtime settings are refreshed on a regular basis.

# All lines beginning with a '#' are comments and can be safely removed.

#######################################################################
#######################    emonHub  settings    #######################
#######################################################################
[hub]

# loglevel must be one of DEBUG, INFO, WARNING, ERROR, and CRITICAL
# see here : http://docs.python.org/2/library/logging.html
loglevel = DEBUG


#######################################################################
#######################        Reporters        #######################
#######################################################################
[reporters]

# This reporter sends data to emonCMS
# [[emonCMS]]
#    Type = EmonHubEmoncmsReporter
#    [[[init_settings]]]
#    [[[runtimesettings]]]
#        url = http://localhost/emoncms/input/bulk
#        apikey = 

# This reporter publishes data as MQTT
[[MQTT]]
    Type = EmonHubMqttReporter
    [[[init_settings]]]
        #TODO decide on buffering or just live data ???
        buffer_size = 1
    [[[runtimesettings]]]
        #TODO main topic headers / broker details etc
        setting1 = test1
        setting2 = test2
        
#######################################################################
#######################       Interfacers       #######################
#######################################################################
[interfacers]

# This interfacer manages the RFM2Pi module
[[RFM2Pi]]
    Type = EmonHubJeeInterfacer
    [[[init_settings]]]
        com_port = /dev/ttyAMA0
        com_baud = 9600
    [[[runtimesettings]]]
        group = 1
        frequency = 868
        baseid = 15


#######################################################################
#######################          Nodes          #######################
#######################################################################
[nodes]

# List of nodes by node ID
# 'datacode' is default for node and 'datacodes' are per value data codes.
# if both are present 'datacode' is ignored in favour of 'datacodes'

[[4]]
        nodename = kitchen
        firmware = EmonTH
        hardware = EmonTH
        datacodes = h,h
        names = temperature,battery
        units = C,V
        scale = 0.01,0.001
        record = 0,0

[[6]]
        nodename = Lab
        firmware = emonTxV3_continuous_kwhtotals_noeeprom.ino
        hardware = EmonTx v3.4
	datacodes = L, h, h, h, h, l, l, l, l 
        names = msgnum, CT1_Power, CT2_Power, CT3_Power, CT4_Power, CT1_Wh, CT2_Wh, CT3_Wh, CT4_Wh
        units = "",W,W,W,W,Wh,Wh,Wh,Wh
        record = 0,10,10,0,0,10,10,0,0

[[10]]
        nodename = House
        firmware = custom_firmware
        hardware = emontx v2
        names = total_power, total_VA, solar_power, solar_VA, house_power, house_VA, mains_voltage, collector, cylinder_top, cylinder_bottom, pump_state
        units = W,VA,W,VA,W,VA,V,C,C,C,
        scale = 1,1,1,1,1,1,0.01,0.01,0.01,0.01,1
        record = 0,0,5,5,0,0,0,60,60,60,0

[[16]]
        nodename = outside1
        firmware = lptn
        hardware = emontx v2
        datacodes = h,
        names = temperature,
        units = C,
        scale = 0.01,
        record = 0,

[[19]]
        nodename = outside2
        firmware = lptn
        hardware = emontx v2
        datacodes = h,h
        names = temperature,vcc
        units = C,V
        scale = 0.01,0.001
        record = 0,0
